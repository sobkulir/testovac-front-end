# -*- coding: utf-8 -*-
# Generated by Django 1.9.5 on 2016-07-07 20:37
from __future__ import unicode_literals

import django.db.models.deletion
from django.db import migrations, models

import testovac.tasks.utils


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0007_alter_validators_add_error_messages"),
        ("submit", "0002_review_filename"),
    ]

    operations = [
        migrations.CreateModel(
            name="Competition",
            fields=[
                (
                    "slug",
                    models.SlugField(
                        help_text=b"Must be unique, serves as part of URL.",
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=128)),
                ("public", models.BooleanField(default=True)),
                (
                    "administrators_group",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="administrators_of_competition",
                        to="auth.Group",
                    ),
                ),
                (
                    "users_group",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="users_of_competition",
                        to="auth.Group",
                    ),
                ),
            ],
            options={
                "verbose_name": "competition",
                "verbose_name_plural": "competitions",
            },
        ),
        migrations.CreateModel(
            name="Contest",
            fields=[
                (
                    "slug",
                    models.SlugField(
                        help_text=b"Must be unique among all contests, serves as part of URL.",
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=128)),
                ("number", models.IntegerField()),
                (
                    "start_time",
                    models.DateTimeField(
                        blank=True,
                        default=testovac.tasks.utils.default_contest_start_end_time,
                        null=True,
                    ),
                ),
                (
                    "end_time",
                    models.DateTimeField(
                        blank=True,
                        default=testovac.tasks.utils.default_contest_start_end_time,
                        null=True,
                    ),
                ),
                ("visible", models.BooleanField(default=False)),
                (
                    "competition",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="tasks.Competition",
                    ),
                ),
            ],
            options={"verbose_name": "contest", "verbose_name_plural": "contests",},
        ),
        migrations.CreateModel(
            name="Task",
            fields=[
                (
                    "slug",
                    models.SlugField(
                        help_text=b"Must be unique among all tasks, serves as part of URL.",
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=128)),
                ("number", models.IntegerField()),
                ("max_points", models.IntegerField()),
                (
                    "contest",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="tasks.Contest"
                    ),
                ),
                (
                    "submit_receivers",
                    models.ManyToManyField(to="submit.SubmitReceiver"),
                ),
            ],
            options={"verbose_name": "task", "verbose_name_plural": "tasks",},
        ),
    ]
